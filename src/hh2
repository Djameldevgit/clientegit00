Claro, puedo hacer eso. A continuación, te desgloso cada sección del div del StatusModal en React y su respectiva sección en el archivo CSS asociado.

Código React y su CSS correspondiente
1. div.status_modal
React:

jsx
Copiar código
<div className="status_modal">
    <form onSubmit={handleSubmit}>
        ...
    </form>
</div>
CSS:

css
Copiar código
.status_modal {
    position: fixed;
    top: 0;
    left: 0;
    background: #0008;
    z-index: 4;
    width: 100%;
    height: 100vh;
    overflow: auto;
}
2. form
React:

jsx
Copiar código
<form onSubmit={handleSubmit}>
    ...
</form>
CSS:

css
Copiar código
.status_modal form {
    max-width: 450px;
    width: 100%;
    background: white;
    margin: 30px auto;
    padding: 20px;
    border-radius: 5px;
}
3. div.status_header
React:

jsx
Copiar código
<div className="status_header">
    <h5 className="m-0">Create Post</h5>
    <span onClick={() => dispatch({ type: GLOBALTYPES.STATUS, payload: false })}>
        &times;
    </span>
</div>
CSS:

css
Copiar código
.status_header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #ddd;
    transform: translateY(-13px);
}
.status_header span {
    font-size: 2rem;
    font-weight: 900;
    cursor: pointer;
    transform: translateY(-5px);
}
4. div.status_body
React:

jsx
Copiar código
<div className="status_body">
    <textarea name="content" value={content} ... />
    ...
</div>
CSS:

css
Copiar código
.status_body textarea {
    width: 100%;
    min-height: 150px;
    border: none;
    outline: none;
    resize: none;
}
5. div.input_images
React:

jsx
Copiar código
<div className="input_images">
    {
        stream ? 
        <i className="fas fa-camera" onClick={handleCapture} /> :
        <>
            <i className="fas fa-camera" onClick={handleStream} />
            <div className="file_upload">
                <i className="fas fa-image" />
                <input type="file" name="file" id="file" multiple accept="image/*,video/*" onChange={handleChangeImages} />
            </div>
        </>
    }
</div>
CSS:

css
Copiar código
.status_body .input_images {
    display: flex;
    justify-content: center;
    margin: 10px 0;
}
.status_body .input_images i {
    font-size: 2rem;
    cursor: pointer;
}
.status_body .input_images .file_upload {
    overflow: hidden;
    margin: 0 10px;
    position: relative;
}
.status_body .input_images .file_upload #file {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
}
6. div.show_images
React:

jsx
Copiar código
<div className="show_images">
    {
        images.map((img, index) => (
            <div key={index} id="file_img">
                ...
                <span onClick={() => deleteImages(index)}>&times;</span>
            </div>
        ))
    }
</div>
CSS:

css
Copiar código
.status_body .show_images {
    max-height: 270px;
    width: 100%;
    overflow-y: auto;
    overflow-x: hidden;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    place-items: center;
    padding: 10px 0;
    grid-gap: 10px;
}
.status_body .show_images #file_img {
    position: relative;
    width: 100%;
    height: 100%;
}
.status_body .show_images #file_img img,
.status_body .show_images #file_img video {
    display: block;
    object-fit: contain;
    width: 100%;
    height: 100%;
    max-height: 100px;
}
.status_body .show_images #file_img span {
    position: absolute;
    top: -1px;
    right: -2px;
    z-index: 4;
    background: white;
    color: crimson;
    padding: 3px 7px;
    border: 1px solid crimson;
    border-radius: 50%;
    font-size: 10px;
    font-weight: bolder;
    cursor: pointer;
}
7. div.stream
React:

jsx
Copiar código
{
    stream &&
    <div className="stream position-relative">
        <video autoPlay muted ref={videoRef} width="100%" height="100%" ... />
        <span onClick={handleStopStream}>&times;</span>
        <canvas ref={refCanvas} style={{ display: 'none' }} />
    </div>
}
CSS:

css
Copiar código
.status_body .stream span {
    position: absolute;
    top: -10px;
    right: 5px;
    color: crimson;
    font-size: 2rem;
    font-weight: 900;
    cursor: pointer;
}
8. div.status_footer
React:

jsx
Copiar código
<div className="status_footer">
    <button className="btn btn-secondary w-100" type="submit">
        Post
    </button>
</div>
CSS: (No hay CSS específico para esta sección en el código proporcionado)

Estas son las correspondencias de cada sección del StatusModal en React con su respectivo estilo en el archivo CSS.






